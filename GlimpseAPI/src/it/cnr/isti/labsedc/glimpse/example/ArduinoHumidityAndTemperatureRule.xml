<?xml version="1.0" encoding="UTF-8"?>
<ComplexEventRuleActionList xmlns="http://labse.isti.cnr.it/glimpse/xml/ComplexEventRule"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://labse.isti.cnr.it/glimpse/xml/ComplexEventRule ./ComplexEventRule.xsd">
<Insert RuleType="drools">
	<RuleName>HumidityRule</RuleName>
        <RuleBody>
        import it.cnr.isti.labsedc.glimpse.event.GlimpseBaseEventArduino;
        import it.cnr.isti.labsedc.glimpse.manager.ResponseDispatcher;
        import it.cnr.isti.labsedc.glimpse.utils.NotifierUtils;
		import it.cnr.isti.labsedc.glimpse.impl.RuleTemplateEnum;
		import it.cnr.isti.labsedc.glimpse.rules.DroolsRulesManager;
		import it.cnr.isti.labsedc.glimpse.utils.MailNotification;
        
        declare GlimpseBaseEventArduino
	        @role( event )
	        @timestamp( timeStamp )
        end
                
		rule "HumidityRule"
		no-loop true
		salience 20
		dialect "java"
		when
			$aEvent : GlimpseBaseEventArduino(
				this.isConsumed == false,
				this.isException == false,
				this.getEventName == "Humidity sensor value",
				this.getEventData > 10.00);
		then		
			$aEvent.setConsumed(true);
			update($aEvent);
						ResponseDispatcher.LogViolation(
			"RULE",
			"HumidityRule",
			"\nHumidity Level violation notified by sensor: " + $aEvent.getSensorName());
			MailNotification.NotifyToAdministrator(drools.getRule().getName(),$aEvent.getSensorName() + " " + $aEvent.getEventData());
			retract($aEvent);
			
		end
        </RuleBody>
	</Insert>
</ComplexEventRuleActionList>