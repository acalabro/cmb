import it.cnr.isti.labse.cmb.event.SimpleEvent;
import it.cnr.isti.labse.cmb.settings.DebugMessages;
import java.util.List;

declare SimpleEvent
	@role( event )
	@timestamp( timestamp )
end

declare Pair
  first: SimpleEvent
  second: SimpleEvent
end

rule "collectCouple"
	salience 0
	no-loop
	when
		$list : List() from collect(Pair())
	then
		System.out.println("A -> B sequences founded: " + $list.size());
end

rule "occurrencies A -> B"
	no-loop
	salience 1000
	when
		$aEvent : SimpleEvent( this.data == "Evento A", this.isConsumed == false);
		$bEvent : SimpleEvent( this.data == "Evento B",	this after $aEvent,	this.isConsumed == false) over window:time(50s);
	then
		
		Pair p = new Pair();
   		p.setFirst( $aEvent );
   		p.setSecond( $bEvent );
   		insert(p);
   		
		$aEvent.setConsumed(true);
		$bEvent.setConsumed(true);
		update( $aEvent );
		update( $bEvent );
end

/* TRIPLA ABC

declare Teir
  first: SimpleEvent
  second: SimpleEvent
  third: SimpleEvent
end

rule "collectTrio"
	no-loop
	when
		$list : List() from collect(Teir())
	then
		System.out.println("A -> B -> C sequences founded: " + $list.size());
end


rule "occurrencies A -> B -> C"
	no-loop
	salience 5
	when
		$aEvent : SimpleEvent( this.data == "Evento A");
		$bEvent : SimpleEvent( this.data == "Evento B", this after $aEvent);
		$cEvent : SimpleEvent( this.data == "Evento C", this after $aEvent, this after $bEvent);
	then
		
		Teir p = new Teir();
   		p.setFirst( $aEvent );
   		p.setSecond( $bEvent );
   		p.setThird( $cEvent );
   		insert(p);

		retract ($aEvent);
		retract ($bEvent);
		retract ($cEvent);
end*/