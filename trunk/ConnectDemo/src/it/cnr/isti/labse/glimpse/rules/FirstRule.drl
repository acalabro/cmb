import it.cnr.isti.labse.glimpse.event.SimpleEvent;
import it.cnr.isti.labse.glimpse.settings.DebugMessages;
import java.util.List;
import it.cnr.isti.labse.glimpse.settings.DroolsUtils;

declare SimpleEvent
	@role( event )
	@timestamp( timestamp )
end

declare PairAB
  first: SimpleEvent
  second: SimpleEvent
end

rule "occurrencies A -> B"
	no-loop
	salience 9999
	dialect "java"
	when
		$aEvent : SimpleEvent( this.data == "Event A", this.isConsumed == false);
		$bEvent : SimpleEvent( this.data == "Event B", this.isConsumed == false, this after $aEvent, this.getSourceID == $aEvent.getSourceID);
		eval( DroolsUtils.strictlyFollows($aEvent.getSequenceID(), $bEvent.getSequenceID()));
	then
		PairAB p = new PairAB();
   		p.setFirst( $aEvent );
   		p.setSecond( $bEvent );
   		insert(p);
   		
		$aEvent.setConsumed(true);
		$bEvent.setConsumed(true);
		update( $aEvent );
		update( $bEvent );
		retract( $aEvent );
		retract( $bEvent );
		System.out.println("Latency: " + DroolsUtils.latency($aEvent.timestamp, $bEvent.timestamp));
end

rule "collectDataAndAverage"
	salience 9990
	no-loop
	when
		$listAB : List() from collect(PairAB())
	then
		System.out.println("Strictly-follow-A -> B sequences found: " + $listAB.size());
		DebugMessages.line();
end