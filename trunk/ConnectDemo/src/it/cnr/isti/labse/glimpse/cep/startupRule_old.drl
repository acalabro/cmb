#list any import classes here.
import it.cnr.isti.labse.glimpse.event.SimpleEvent;
import it.cnr.isti.labse.glimpse.manager.ResponseDispatcher;
import it.cnr.isti.labse.glimpse.settings.DroolsUtils;

#declare any global variables here

declare SimpleEvent
	@role( event )
	@timestamp( timestamp )
end

declare CommunicationDuration
	latency : float
end

public workload{
 int numberOfActiveRequests;
}

rule "eval"
	no-loop
	salience 999
	dialect "java"		
	when
		$aEvent : SimpleEvent(this.data == "incomingRequest",
								this.getConsumed == false);
		$bEvent : SimpleEvent(this.data == "requestServed",
								this.getConsumed == false,
								this.getConnectorID == $aEvent.getConnectorID,
								this.getConnectorInstanceID == $aEvent.getConnectorInstanceID,
								this.getConnectorInstanceExecutionID == $aEvent.getConnectorInstanceExecutionID,
								this after $aEvent);
								
		$total : Number() 
             from accumulate($bEvent : SimpleEvent()
             				from entry-point "DEFAULT 
                            sum( $value) )
		CommunicationDuration p = new CommunicationDuration();
		p.setLatency(eval(DroolsUtil.latency($aEvent.getTimestamp(), $bEvent.getTimestamp()));
		$CommunicationDurationList : ArrayList() from collect(CommunicationDuration);
	the
		retract( $aEvent );
		retract( $bEvent );
		ResponseDispatcher.NotifyMe(drools.getRule().getName(),"DependabilityAnalisysEnabler2",	$CommunicationDurationList.size();));
end