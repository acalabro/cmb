<?xml version="1.0" encoding="UTF-8"?>
<ComplexEventRuleActionList xmlns="http://labse.isti.cnr.it/glimpse/xml/ComplexEventRule"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://labse.isti.cnr.it/glimpse/xml/ComplexEventRule ./ComplexEventRule.xsd">
<Insert RuleType="drools">
	<RuleName>Upload time</RuleName>
        <RuleBody>
		import it.cnr.isti.labse.glimpse.event.SimpleEvent;
		import it.cnr.isti.labse.glimpse.manager.ResponseDispatcher;
		import it.cnr.isti.labse.glimpse.settings.DroolsUtils;
		
		declare SimpleEvent
	    @role( event )
	    @timestamp( timestamp )
	    end
	    
		rule "Upload time"
		no-loop
		salience 999
		dialect "java"
		when
			$aEvent : SimpleEvent(this.data == "uploadData",
									this.getConsumed == false);
			$bEvent : SimpleEvent(this.data == "uploadSuccess",
									this.getConsumed == false,
									this.getConnectorID == $aEvent.getConnectorID,
									this.getConnectorInstanceID == $aEvent.getConnectorInstanceID,
									this.getConnectorInstanceExecutionID == $aEvent.getConnectorInstanceExecutionID,
									this after $aEvent);
		then
			$aEvent.setConsumed(true);
			$bEvent.setConsumed(true);
			update( $aEvent );
			update( $bEvent );
			retract( $aEvent );
			retract( $bEvent );
			ResponseDispatcher.NotifyMe(drools.getRule().getName(),"DependabilityAnalisysEnabler2",DroolsUtils.latency($aEvent.getTimestamp(), $bEvent.getTimestamp()));
		end
        </RuleBody>
	</Insert>
	<Insert RuleType="drools">
    <RuleName>Tuple matching</RuleName>
    <RuleBody>
		import it.cnr.isti.labse.glimpse.event.SimpleEvent;
		import it.cnr.isti.labse.glimpse.manager.ResponseDispatcher;
		import it.cnr.isti.labse.glimpse.settings.DroolsUtils;
		
		declare SimpleEvent
	    @role( event )
	    @timestamp( timestamp )
	    end
	    
	    declare PairSA_AS
			first : SimpleEvent
			second : SimpleEvent
		end
		
	    rule "Tuple matching"
	    no-loop
	    salience 999
	    dialect "java"
	    when
	    	$aEvent : SimpleEvent(this.data == "selectArea",
									this.getConsumed == false);
			$bEvent : SimpleEvent(this.data == "areaSelected",
									this.getConsumed == false,
									this.getConnectorID == $aEvent.getConnectorID,
									this.getConnectorInstanceID == $aEvent.getConnectorInstanceID,
									this.getConnectorInstanceExecutionID == $aEvent.getConnectorInstanceExecutionID,
									this after $aEvent);
	    then
	 		PairSA_AS p = new PairSA_AS();
	 		p.setFirst($aEvent);
	 		p.setSecond($bEvent);
	 		insert(p);
	 		retract($aEvent);
	 		retract($bEvent);
	    end
        </RuleBody>
    </Insert> 
</ComplexEventRuleActionList>
