<?xml version="1.0" encoding="UTF-8"?>
<ComplexEventRuleActionList xmlns="http://labse.isti.cnr.it/glimpse/xml/ComplexEventRule"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://labse.isti.cnr.it/glimpse/xml/ComplexEventRule ./ComplexEventRule.xsd">
<Insert RuleType="drools">
	<RuleName>Upload time</RuleName>
        <RuleBody>
			import it.cnr.isti.labse.glimpse.event.SimpleEvent;
			import it.cnr.isti.labse.glimpse.manager.ResponseDispatcher;
			import it.cnr.isti.labse.glimpse.settings.DroolsUtils;
			
			declare SimpleEvent
			    @role( event )
			    @timestamp( timestamp )
		    end
		
			declare SatisfiedRequest
				duration : float
				incoming : SimpleEvent
				outcoming: SimpleEvent
			end
		
			rule "countIncoming"
			no-loop
			salience 999
			dialect "java"
			when
				$total : Number() 
		             from accumulate($bEvent : SimpleEvent(data == "selectArea",
		            					this.getConsumed == false)
		             				from entry-point "DEFAULT",
		                            count ($bEvent))
			then
				ResponseDispatcher.NotifyMe(drools.getRule().getName(),"DePer Module", "Incoming request total number: " $total);
			end
				
			rule "checkCompleted"
			no-loop
			salience 999
			dialect "java"
			when
				$aEvent : SimpleEvent(this.data == "selectArea", this.getConsumed == false);
				$bEvent : SimpleEvent(this.data == "uploadData",
										this.getConsumed == false,
										this.getConnectorID == $aEvent.getConnectorID,
										this.getConnectorInstanceID == $aEvent.getConnectorInstanceID,
										this.getConnectorInstanceExecutionID == $aEvent.getConnectorInstanceExecutionID,
										this after $aEvent);
			then
				$aEvent.setConsumed(true);
				$bEvent.setConsumed(true);
				SatisfiedRequest sr = new SatisfiedRequest();
				sr.setIncoming($aEvent);
				sr.setOutcoming($bEvent);
				sr.setDuration(DroolsUtils.latency($aEvent.getTimestamp(),$bEvent.getTimestamp()));
				insert(sr);
				$aEvent.setConsumed(true);
				$bEvent.setConsumed(true);
			end
			
			rule "average request completion time"
			no-loop
			salience 999
			dialect "java"
			when
				$totalCompleted : Number() 
		             from accumulate($aCompleted : SatisfiedRequest()
		             				from entry-point "DEFAULT",
		                            average($aCompleted.getDuration()))
			then
				ResponseDispatcher.NotifyMe(drools.getRule().getName(),"DePer Module", "Average completion time: " $totalCompleted);
			end	
        </RuleBody>
    </Insert> 
</ComplexEventRuleActionList>
